mutation addExpenseGroup($input: NewExpenseGroupInput!) {
  expenseGroup: addExpenseGroup(input: $input) {
    startDate
    endDate
    totalBudget
    expenses {
      name
      balance
      dueDate
      isPaid
      note
    }
  }
}

mutation deleteExpenseGroup($expenseGroupId: String!) {
  status: deleteExpenseGroup(expenseGroupId: $expenseGroupId) {
    code
    message
  }
}

mutation updateExpense($input: UpdateExpenseInput!) {
  expense: updateExpense(input: $input) {
    name
    balance
    dueDate
    isPaid
    note
  }
}

mutation updateExpensePaidStatus(
  $isPaid: Boolean!
  $expenseGroupId: String!
  $expenseId: String!
) {
  expense: updateExpensePaidStatus(
    isPaid: $isPaid
    expenseGroupId: $expenseGroupId
    expenseId: $expenseId
  ) {
    isPaid
  }
}

mutation addExpense(
  $expenseGroupId: ID!
  $name: String!
  $balance: Float!
  $dueDate: String!
  $isPaid: Boolean!
  $note: String
) {
  expense: addExpense(
    expenseGroupId: $expenseGroupId
    name: $name
    balance: $balance
    dueDate: $dueDate
    isPaid: $isPaid
    note: $note
  ) {
    _id
    name
    balance
    dueDate
    isPaid
    note
  }
}

mutation updateExpenseGroup(
  $expenseGroupId: ID!
  $startDate: String!
  $endDate: String!
  $totalBudget: Float!
) {
  expenseGroup: updateExpenseGroup(
    expenseGroupId: $expenseGroupId
    startDate: $startDate
    endDate: $endDate
    totalBudget: $totalBudget
  ) {
    expenseGroupId
    startDate
    endDate
    totalBudget
  }
}
