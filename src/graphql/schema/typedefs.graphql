type Query {
  getAllExpenseGroups: [ExpenseGroup]!
  getExpenseGroupById(id: String!): ExpenseGroup!
  authenticateUser(username: String!, password: String!): AuthResponse!
  logoutUser: Boolean!
}

type Mutation {
  addExpense(
    name: String!
    balance: Float!
    dueDate: String!
    isPaid: Boolean!
  ): Expense!
}

type AuthResponse {
  status: Int!
  message: String!
}

type ExpenseGroup {
  id: ID!
  name: String!
  totalBudget: Float!
  expenses: [Expense!]
}

type Expense {
  id: ID!
  name: String!
  balance: Float!
  dueDate: String!
  isPaid: Boolean!
}
